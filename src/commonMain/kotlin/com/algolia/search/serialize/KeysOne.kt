package com.algolia.search.serialize

public const val KeyQuery: String = "query"
public const val KeySearchableAttributes: String = "searchableAttributes"
public const val KeyAttributesForFaceting: String = "attributesForFaceting"
public const val KeyUnretrievableAttributes: String = "unretrievableAttributes"
public const val KeyAttributesToRetrieve: String = "attributesToRetrieve"
public const val KeyRestrictSearchableAttributes: String = "restrictSearchableAttributes"
public const val KeyRanking: String = "ranking"
public const val KeyCustomRanking: String = "customRanking"
public const val KeyReplicas: String = "replicas"
public const val KeyFilters: String = "filters"
public const val KeyFacetFilters: String = "facetFilters"
public const val KeyOptionalFilters: String = "optionalFilters"
public const val KeyNumericFilters: String = "numericFilters"
public const val KeyTagFilters: String = "tagFilters"
public const val KeySumOrFiltersScores: String = "sumOrFiltersScores"
public const val KeyFacets: String = "facets"
public const val KeyMaxValuesPerFacet: String = "maxValuesPerFacet"
public const val KeyFacetingAfterDistinct: String = "facetingAfterDistinct"
public const val KeySortFacetValuesBy: String = "sortFacetValuesBy"
public const val KeyAttributesToHighlight: String = "attributesToHighlight"
public const val KeyAttributesToSnippet: String = "attributesToSnippet"
public const val KeyHighlightPreTag: String = "highlightPreTag"
public const val KeyHighlightPostTag: String = "highlightPostTag"
public const val KeySnippetEllipsisText: String = "snippetEllipsisText"
public const val KeyRestrictHighlightAndSnippetArrays: String = "restrictHighlightAndSnippetArrays"
public const val KeyPage: String = "page"
public const val KeyHitsPerPage: String = "hitsPerPage"
public const val KeyOffset: String = "offset"
public const val KeyLength: String = "length"
public const val KeyPaginationLimitedTo: String = "paginationLimitedTo"
public const val KeyMinWordSizeFor1Typo: String = "minWordSizefor1Typo"
public const val KeyMinWordSizeFor2Typos: String = "minWordSizefor2Typos"
public const val KeyTypoTolerance: String = "typoTolerance"
public const val KeyAllowTyposOnNumericTokens: String = "allowTyposOnNumericTokens"
public const val KeyDisableTypoToleranceOnAttributes: String = "disableTypoToleranceOnAttributes"
public const val KeyDisableTypoToleranceOnWords: String = "disableTypoToleranceOnWords"
public const val KeySeparatorsToIndex: String = "separatorsToIndex"
public const val KeyAroundLatLng: String = "aroundLatLng"
public const val KeyAroundLatLngViaIP: String = "aroundLatLngViaIP"
public const val KeyAroundRadius: String = "aroundRadius"
public const val KeyAroundPrecision: String = "aroundPrecision"
public const val KeyMinimumAroundRadius: String = "minimumAroundRadius"
public const val KeyInsideBoundingBox: String = "insideBoundingBox"
public const val KeyInsidePolygon: String = "insidePolygon"
public const val KeyIgnorePlurals: String = "ignorePlurals"
public const val KeyRemoveStopWords: String = "removeStopWords"
public const val KeyCamelCaseAttributes: String = "camelCaseAttributes"
public const val KeyDecompoundedAttributes: String = "decompoundedAttributes"
public const val KeyKeepDiacriticsOnCharacters: String = "keepDiacriticsOnCharacters"
public const val KeyQueryLanguages: String = "queryLanguages"
public const val KeyEnableRules: String = "enableRules"
public const val KeyRuleContexts: String = "ruleContexts"
public const val KeyEnablePersonalization: String = "enablePersonalization"
public const val KeyQueryType: String = "queryType"
public const val KeyRemoveWordsIfNoResults: String = "removeWordsIfNoResults"
public const val KeyAdvancedSyntax: String = "advancedSyntax"
public const val KeyOptionalWords: String = "optionalWords"
public const val KeyDisablePrefixOnAttributes: String = "disablePrefixOnAttributes"
public const val KeyDisableExactOnAttributes: String = "disableExactOnAttributes"
public const val KeyExactOnSingleWordQuery: String = "exactOnSingleWordQuery"
public const val KeyAlternativesAsExact: String = "alternativesAsExact"
public const val KeyNumericAttributesForFiltering: String = "numericAttributesForFiltering"
public const val KeyAllowCompressionOfIntegerArray: String = "allowCompressionOfIntegerArray"
public const val KeyAttributeForDistinct: String = "attributeForDistinct"
public const val KeyDistinct: String = "distinct"
public const val KeyGetRankingInfo: String = "getRankingInfo"
public const val KeyClickAnalytics: String = "clickAnalytics"
public const val KeyAnalytics: String = "analytics"
public const val KeyAnalyticsTags: String = "analyticsTags"
public const val KeySynonyms: String = "synonyms"
public const val KeyReplaceSynonymsInHighlight: String = "replaceSynonymsInHighlight"
public const val KeyMinProximity: String = "minProximity"
public const val KeyResponseFields: String = "responseFields"
public const val KeyMaxFacetHits: String = "maxFacetHits"
public const val KeyPercentileComputation: String = "percentileComputation"
public const val KeyGeo: String = "geo"
public const val KeyTypo: String = "typo"
public const val KeyWords: String = "words"
public const val KeyProximity: String = "proximity"
public const val KeyAttribute: String = "attribute"
public const val KeyExact: String = "exact"
public const val KeyCustom: String = "custom"
public const val KeyAsc: String = "asc"
public const val KeyDesc: String = "desc"
public const val KeyStrict: String = "strict"
public const val KeyMin: String = "min"
public const val KeySingleWordSynonym: String = "singleWordSynonym"
public const val KeyMultiWordsSynonym: String = "multiWordsSynonym"
public const val KeyAll: String = "all"
public const val KeyWord: String = "word"
public const val KeyNone: String = "none"
public const val KeyStopIfEnoughMatches: String = "stopIfEnoughMatches"
public const val KeyPrefixLast: String = "prefixLast"
public const val KeyPrefixAll: String = "prefixAll"
public const val KeyPrefixNone: String = "prefixNone"
public const val KeyLastWords: String = "lastWords"
public const val KeyFirstWords: String = "firstWords"
public const val KeyAllOptional: String = "allOptional"
public const val KeyStar: String = "*"
public const val KeyAutomaticRadius: String = "automaticRadius"
public const val KeyExhaustiveFacetsCount: String = "exhaustiveFacetsCount"
public const val KeyFacets_Stats: String = "facets_stats"
public const val KeyHits: String = "hits"
public const val KeyIndex: String = "index"
public const val KeyNbHits: String = "nbHits"
public const val KeyNbPages: String = "nbPages"
public const val KeyParams: String = "params"
public const val KeyProcessingTimeMS: String = "processingTimeMS"
public const val KeyQueryAfterRemoval: String = "queryAfterRemoval"
public const val KeyUserData: String = "userData"
public const val KeyCount: String = "count"
public const val KeyAlpha: String = "alpha"
public const val KeyEqualOnly: String = "equalOnly"
public const val KeyFacetQuery: String = "facetQuery"
public const val KeyStrategy: String = "strategy"
public const val KeyRequests: String = "requests"
public const val KeyIndexName: String = "indexName"
public const val KeyForwardToReplicas: String = "forwardToReplicas"
public const val KeyPublished: String = "published"
public const val KeyNotPublished: String = "notPublished"
public const val KeyStatus: String = "status"
public const val KeyOperation: String = "operation"
public const val KeyDestination: String = "destination"
public const val KeyCopy: String = "copy"
public const val KeyMove: String = "move"
public const val KeyRules: String = "rules"
public const val KeySettings: String = "settings"
public const val KeyScope: String = "scope"
public const val KeyCursor: String = "cursor"
public const val KeyPartial: String = "partial"
public const val KeyFull: String = "full"
public const val KeyCreateIfNotExists: String = "createIfNotExists"
public const val KeyIncrement: String = "Increment"
public const val KeyIncrementFrom: String = "IncrementFrom"
public const val KeyIncrementSet: String = "IncrementSet"
public const val KeyDecrement: String = "Decrement"
public const val KeyAdd: String = "Add"
public const val KeyRemove: String = "Remove"
public const val KeyRemoveLowercase: String = "remove"
public const val KeyAddUnique: String = "AddUnique"
public const val Key_Operation: String = "_operation"
public const val KeyValue: String = "value"
public const val KeyObjectID: String = "objectID"
public const val KeyResults: String = "results"
public const val KeyAddObject: String = "addObject"
public const val KeyUpdateObject: String = "updateObject"
public const val KeyPartialUpdateObject: String = "partialUpdateObject"
public const val KeyPartialUpdateObjectNoCreate: String = "partialUpdateObjectNoCreate"
public const val KeyDeleteObject: String = "deleteObject"
public const val KeyDelete: String = "delete"
public const val KeyClear: String = "clear"
public const val KeyAction: String = "action"
public const val KeyBody: String = "body"
public const val KeyObjectIDs: String = "objectIDs"
public const val KeyTaskID: String = "taskID"
public const val KeySearch: String = "search"
public const val KeyBrowse: String = "browse"
public const val KeyDeleteIndex: String = "deleteIndex"
public const val KeyEditSettings: String = "editSettings"
public const val KeyListIndexes: String = "listIndexes"
public const val KeyLogs: String = "logs"
public const val KeySeeUnretrievableAttributes: String = "seeUnretrievableAttributes"
public const val KeyType: String = "type"
public const val KeySynonym: String = "synonym"
public const val KeyOneWaySynonym: String = "onewaysynonym"
public const val KeyInput: String = "input"
public const val KeyCorrections: String = "corrections"
public const val KeyReplacements: String = "replacements"
public const val KeyPlaceholder: String = "placeholder"
public const val KeyAlternativeCorrection1: String = "altcorrection1"
public const val KeyAlternativeCorrection2: String = "altcorrection2"
public const val KeyReplaceExistingSynonyms: String = "replaceExistingSynonyms"
public const val KeyIs: String = "is"
public const val KeyStartsWith: String = "startsWith"
public const val KeyEndsWith: String = "endsWith"
public const val KeyContains: String = "contains"
public const val KeyContext: String = "context"
public const val KeyRule: String = "rule"
public const val KeyAnchoring: String = "anchoring"
public const val KeyPattern: String = "pattern"
public const val KeyReplace: String = "replace"
public const val KeyFacet: String = "facet"
public const val KeyDisjunctive: String = "disjunctive"
public const val KeyScore: String = "score"
public const val KeyInsert: String = "insert"
public const val KeyEdits: String = "edits"
public const val KeyAutomaticFacetFilters: String = "automaticFacetFilters"
public const val KeyAutomaticOptionalFacetFilters: String = "automaticOptionalFacetFilters"
public const val KeyPromote: String = "promote"
public const val KeyHide: String = "hide"
public const val KeyClearExistingRules: String = "clearExistingRules"
public const val KeyCluster: String = "cluster"
public const val KeyAlgoliaUserID: String = "X-Algolia-User-ID"
public const val KeyForwardedFor: String = "X-Forwarded-For"
public const val KeyDeletedAt: String = "deletedAt"
public const val KeyCreatedAt: String = "createdAt"
public const val KeyUpdatedAt: String = "updatedAt"
public const val KeyKey: String = "key"
