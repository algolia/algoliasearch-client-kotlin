/** Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT. */
package com.algolia.client.model.ingestion

import com.algolia.client.exception.AlgoliaClientException
import com.algolia.client.extensions.internal.*
import kotlinx.serialization.*
import kotlinx.serialization.builtins.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.*
import kotlin.jvm.JvmInline

/**
 * SourceUpdateInput
 *
 * Implementations:
 * - [SourceBigQuery]
 * - [SourceCSV]
 * - [SourceGA4BigQueryExport]
 * - [SourceJSON]
 * - [SourceUpdateCommercetools]
 * - [SourceUpdateDocker]
 * - [SourceUpdateShopify]
 */
@Serializable(SourceUpdateInputSerializer::class)
public sealed interface SourceUpdateInput {
  @Serializable
  @JvmInline
  public value class SourceGA4BigQueryExportValue(public val value: SourceGA4BigQueryExport) : SourceUpdateInput

  @Serializable
  @JvmInline
  public value class SourceBigQueryValue(public val value: SourceBigQuery) : SourceUpdateInput

  @Serializable
  @JvmInline
  public value class SourceUpdateDockerValue(public val value: SourceUpdateDocker) : SourceUpdateInput

  @Serializable
  @JvmInline
  public value class SourceUpdateCommercetoolsValue(public val value: SourceUpdateCommercetools) : SourceUpdateInput

  @Serializable
  @JvmInline
  public value class SourceJSONValue(public val value: SourceJSON) : SourceUpdateInput

  @Serializable
  @JvmInline
  public value class SourceCSVValue(public val value: SourceCSV) : SourceUpdateInput

  @Serializable
  @JvmInline
  public value class SourceUpdateShopifyValue(public val value: SourceUpdateShopify) : SourceUpdateInput

  public companion object {

    public fun of(value: SourceGA4BigQueryExport): SourceUpdateInput {
      return SourceGA4BigQueryExportValue(value)
    }
    public fun of(value: SourceBigQuery): SourceUpdateInput {
      return SourceBigQueryValue(value)
    }
    public fun of(value: SourceUpdateDocker): SourceUpdateInput {
      return SourceUpdateDockerValue(value)
    }
    public fun of(value: SourceUpdateCommercetools): SourceUpdateInput {
      return SourceUpdateCommercetoolsValue(value)
    }
    public fun of(value: SourceJSON): SourceUpdateInput {
      return SourceJSONValue(value)
    }
    public fun of(value: SourceCSV): SourceUpdateInput {
      return SourceCSVValue(value)
    }
    public fun of(value: SourceUpdateShopify): SourceUpdateInput {
      return SourceUpdateShopifyValue(value)
    }
  }
}

internal class SourceUpdateInputSerializer : JsonContentPolymorphicSerializer<SourceUpdateInput>(SourceUpdateInput::class) {
  override fun selectDeserializer(element: JsonElement): DeserializationStrategy<SourceUpdateInput> {
    return when {
      element is JsonObject && element.containsKey("projectID") && element.containsKey("datasetID") && element.containsKey("tablePrefix") -> SourceGA4BigQueryExport.serializer()
      element is JsonObject && element.containsKey("projectID") -> SourceBigQuery.serializer()
      element is JsonObject && element.containsKey("configuration") -> SourceUpdateDocker.serializer()
      element is JsonObject -> SourceUpdateCommercetools.serializer()
      element is JsonObject -> SourceJSON.serializer()
      element is JsonObject -> SourceCSV.serializer()
      element is JsonObject -> SourceUpdateShopify.serializer()
      else -> throw AlgoliaClientException("Failed to deserialize json element: $element")
    }
  }
}
