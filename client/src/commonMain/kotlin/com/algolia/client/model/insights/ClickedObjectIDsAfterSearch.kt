/**
 * Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be
 * lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
 */
package com.algolia.client.model.insights

import kotlinx.serialization.*
import kotlinx.serialization.json.*

/**
 * Click event after an Algolia request. Use this event to track when users click items in the
 * search results. If you're building your category pages with Algolia, you'll also use this event.
 *
 * @param eventName Event name, up to 64 ASCII characters. Consider naming events consistently—for
 *   example, by adopting Segment's
 *   [object-action](https://segment.com/academy/collecting-data/naming-conventions-for-clean-data/#the-object-action-framework)
 *   framework.
 * @param eventType
 * @param index Index name (case-sensitive) to which the event's items belong.
 * @param objectIDs Object IDs of the records that are part of the event.
 * @param positions Position of the clicked item the search results. You must provide 1 `position`
 *   for each `objectID`.
 * @param queryID Unique identifier for a search query. The query ID is required for events related
 *   to search or browse requests. If you add `clickAnalytics: true` as a search request parameter,
 *   the query ID is included in the API response.
 * @param userToken Anonymous or pseudonymous user identifier. Don't use personally identifiable
 *   information in user tokens. For more information, see
 *   [User token](https://www.algolia.com/doc/guides/sending-events/concepts/usertoken).
 * @param authenticatedUserToken Identifier for authenticated users. When the user signs in, you can
 *   get an identifier from your system and send it as `authenticatedUserToken`. This lets you keep
 *   using the `userToken` from before the user signed in, while providing a reliable way to
 *   identify users across sessions. Don't use personally identifiable information in user tokens.
 *   For more information, see
 *   [User token](https://www.algolia.com/doc/guides/sending-events/concepts/usertoken).
 * @param timestamp Timestamp of the event, measured in milliseconds since the Unix epoch. By
 *   default, the Insights API uses the time it receives an event as its timestamp.
 */
@Serializable
public data class ClickedObjectIDsAfterSearch(

  /**
   * Event name, up to 64 ASCII characters. Consider naming events consistently—for example, by
   * adopting Segment's
   * [object-action](https://segment.com/academy/collecting-data/naming-conventions-for-clean-data/#the-object-action-framework)
   * framework.
   */
  @SerialName(value = "eventName") val eventName: String,
  @SerialName(value = "eventType") val eventType: ClickEvent,

  /** Index name (case-sensitive) to which the event's items belong. */
  @SerialName(value = "index") val index: String,

  /** Object IDs of the records that are part of the event. */
  @SerialName(value = "objectIDs") val objectIDs: List<String>,

  /**
   * Position of the clicked item the search results. You must provide 1 `position` for each
   * `objectID`.
   */
  @SerialName(value = "positions") val positions: List<Int>,

  /**
   * Unique identifier for a search query. The query ID is required for events related to search or
   * browse requests. If you add `clickAnalytics: true` as a search request parameter, the query ID
   * is included in the API response.
   */
  @SerialName(value = "queryID") val queryID: String,

  /**
   * Anonymous or pseudonymous user identifier. Don't use personally identifiable information in
   * user tokens. For more information, see
   * [User token](https://www.algolia.com/doc/guides/sending-events/concepts/usertoken).
   */
  @SerialName(value = "userToken") val userToken: String,

  /**
   * Identifier for authenticated users. When the user signs in, you can get an identifier from your
   * system and send it as `authenticatedUserToken`. This lets you keep using the `userToken` from
   * before the user signed in, while providing a reliable way to identify users across sessions.
   * Don't use personally identifiable information in user tokens. For more information, see
   * [User token](https://www.algolia.com/doc/guides/sending-events/concepts/usertoken).
   */
  @SerialName(value = "authenticatedUserToken") val authenticatedUserToken: String? = null,

  /**
   * Timestamp of the event, measured in milliseconds since the Unix epoch. By default, the Insights
   * API uses the time it receives an event as its timestamp.
   */
  @SerialName(value = "timestamp") val timestamp: Long? = null,
) : EventsItems {}
