/** Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT. */
package com.algolia.client.model.search

import com.algolia.client.exception.AlgoliaClientException
import com.algolia.client.extensions.internal.*
import kotlinx.serialization.*
import kotlinx.serialization.builtins.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.*
import kotlin.jvm.JvmInline

/**
 * SearchResult
 *
 * Implementations:
 * - [SearchForFacetValuesResponse]
 * - [SearchResponse]
 */
@Serializable(SearchResultSerializer::class)
public sealed interface SearchResult {
  @Serializable
  @JvmInline
  public value class SearchForFacetValuesResponseValue(public val value: SearchForFacetValuesResponse) : SearchResult

  @Serializable
  @JvmInline
  public value class SearchResponseValue(public val value: SearchResponse) : SearchResult

  public companion object {

    public fun of(value: SearchForFacetValuesResponse): SearchResult {
      return SearchForFacetValuesResponseValue(value)
    }
    public fun of(value: SearchResponse): SearchResult {
      return SearchResponseValue(value)
    }
  }
}

internal class SearchResultSerializer : JsonContentPolymorphicSerializer<SearchResult>(SearchResult::class) {
  override fun selectDeserializer(element: JsonElement): DeserializationStrategy<SearchResult> {
    return when {
      element is JsonObject && element.containsKey("facetHits") -> SearchForFacetValuesResponse.serializer()
      element is JsonObject -> SearchResponse.serializer()
      else -> throw AlgoliaClientException("Failed to deserialize json element: $element")
    }
  }
}
