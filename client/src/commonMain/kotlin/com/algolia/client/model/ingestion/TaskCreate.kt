/** Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT. */
package com.algolia.client.model.ingestion

import kotlinx.serialization.*
import kotlinx.serialization.json.*

/**
 * API request body for creating a task.
 *
 * @param sourceID Universally uniqud identifier (UUID) of a source.
 * @param destinationID Universally unique identifier (UUID) of a destination resource.
 * @param trigger
 * @param action
 * @param enabled Whether the task is enabled.
 * @param failureThreshold Maximum accepted percentage of failures for a task run to finish successfully.
 * @param input
 * @param cursor Date of the last cursor in RFC 3339 format.
 */
@Serializable
public data class TaskCreate(

  /** Universally uniqud identifier (UUID) of a source. */
  @SerialName(value = "sourceID") val sourceID: String,

  /** Universally unique identifier (UUID) of a destination resource. */
  @SerialName(value = "destinationID") val destinationID: String,

  @SerialName(value = "trigger") val trigger: TaskCreateTrigger,

  @SerialName(value = "action") val action: ActionType,

  /** Whether the task is enabled. */
  @SerialName(value = "enabled") val enabled: Boolean? = null,

  /** Maximum accepted percentage of failures for a task run to finish successfully. */
  @SerialName(value = "failureThreshold") val failureThreshold: Int? = null,

  @SerialName(value = "input") val input: TaskInput? = null,

  /** Date of the last cursor in RFC 3339 format. */
  @SerialName(value = "cursor") val cursor: String? = null,
)
