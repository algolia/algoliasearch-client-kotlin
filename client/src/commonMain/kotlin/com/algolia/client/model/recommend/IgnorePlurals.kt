/** Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT. */
package com.algolia.client.model.recommend

import com.algolia.client.exception.AlgoliaClientException
import com.algolia.client.extensions.internal.*
import kotlinx.serialization.*
import kotlinx.serialization.builtins.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.*
import kotlin.jvm.JvmInline

/**
 * Treat singular, plurals, and other forms of declensions as equivalent. You should only use this feature for the languages used in your index.
 *
 * Implementations:
 * - [Boolean] - *[IgnorePlurals.of]*
 * - [BooleanString]
 * - [List<SupportedLanguage>] - *[IgnorePlurals.of]*
 */
@Serializable(IgnorePluralsSerializer::class)
public sealed interface IgnorePlurals {
  @Serializable
  @JvmInline
  public value class ListOfSupportedLanguageValue(public val value: List<SupportedLanguage>) : IgnorePlurals

  @Serializable
  @JvmInline
  public value class BooleanStringValue(public val value: BooleanString) : IgnorePlurals

  @Serializable
  @JvmInline
  public value class BooleanValue(public val value: Boolean) : IgnorePlurals

  public companion object {

    public fun of(value: List<SupportedLanguage>): IgnorePlurals {
      return ListOfSupportedLanguageValue(value)
    }
    public fun of(value: BooleanString): IgnorePlurals {
      return BooleanStringValue(value)
    }
    public fun of(value: Boolean): IgnorePlurals {
      return BooleanValue(value)
    }
  }
}

internal class IgnorePluralsSerializer : JsonContentPolymorphicSerializer<IgnorePlurals>(IgnorePlurals::class) {
  override fun selectDeserializer(element: JsonElement): DeserializationStrategy<IgnorePlurals> {
    return when {
      element is JsonArray -> IgnorePlurals.ListOfSupportedLanguageValue.serializer()
      element.isString -> BooleanString.serializer()
      element.isBoolean -> IgnorePlurals.BooleanValue.serializer()
      else -> throw AlgoliaClientException("Failed to deserialize json element: $element")
    }
  }
}
