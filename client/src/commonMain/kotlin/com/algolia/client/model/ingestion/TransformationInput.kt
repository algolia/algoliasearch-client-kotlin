/**
 * Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be
 * lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
 */
package com.algolia.client.model.ingestion

import com.algolia.client.exception.AlgoliaClientException
import com.algolia.client.extensions.internal.*
import kotlin.jvm.JvmInline
import kotlinx.serialization.*
import kotlinx.serialization.builtins.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.*

/**
 * The input for the transformation, which can be either code or a no-code configuration.
 *
 * Implementations:
 * - [TransformationCode]
 * - [TransformationNoCode]
 */
@Serializable(TransformationInputSerializer::class)
public sealed interface TransformationInput {
  @Serializable
  @JvmInline
  public value class TransformationCodeValue(public val value: TransformationCode) :
    TransformationInput

  @Serializable
  @JvmInline
  public value class TransformationNoCodeValue(public val value: TransformationNoCode) :
    TransformationInput

  public companion object {

    public fun of(value: TransformationCode): TransformationInput = TransformationCodeValue(value)

    public fun of(value: TransformationNoCode): TransformationInput =
      TransformationNoCodeValue(value)
  }
}

internal class TransformationInputSerializer :
  JsonContentPolymorphicSerializer<TransformationInput>(TransformationInput::class) {
  override fun selectDeserializer(
    element: JsonElement
  ): DeserializationStrategy<TransformationInput> {
    return when {
      element is JsonObject -> TransformationCode.serializer()
      element is JsonObject -> TransformationNoCode.serializer()
      else -> throw AlgoliaClientException("Failed to deserialize json element: $element")
    }
  }
}
