/** Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT. */
package com.algolia.client.model.ingestion

import com.algolia.client.exception.AlgoliaClientException
import com.algolia.client.extensions.internal.*
import kotlinx.serialization.*
import kotlinx.serialization.builtins.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.*
import kotlin.jvm.JvmInline

/**
 * TaskCreateTrigger
 *
 * Implementations:
 * - [OnDemandTriggerInput]
 * - [ScheduleTriggerInput]
 * - [StreamingTrigger]
 * - [SubscriptionTrigger]
 */
@Serializable(TaskCreateTriggerSerializer::class)
public sealed interface TaskCreateTrigger {
  @Serializable
  @JvmInline
  public value class ScheduleTriggerInputValue(public val value: ScheduleTriggerInput) : TaskCreateTrigger

  @Serializable
  @JvmInline
  public value class OnDemandTriggerInputValue(public val value: OnDemandTriggerInput) : TaskCreateTrigger

  @Serializable
  @JvmInline
  public value class SubscriptionTriggerValue(public val value: SubscriptionTrigger) : TaskCreateTrigger

  @Serializable
  @JvmInline
  public value class StreamingTriggerValue(public val value: StreamingTrigger) : TaskCreateTrigger

  public companion object {

    public fun of(value: ScheduleTriggerInput): TaskCreateTrigger {
      return ScheduleTriggerInputValue(value)
    }
    public fun of(value: OnDemandTriggerInput): TaskCreateTrigger {
      return OnDemandTriggerInputValue(value)
    }
    public fun of(value: SubscriptionTrigger): TaskCreateTrigger {
      return SubscriptionTriggerValue(value)
    }
    public fun of(value: StreamingTrigger): TaskCreateTrigger {
      return StreamingTriggerValue(value)
    }
  }
}

internal class TaskCreateTriggerSerializer : JsonContentPolymorphicSerializer<TaskCreateTrigger>(TaskCreateTrigger::class) {
  override fun selectDeserializer(element: JsonElement): DeserializationStrategy<TaskCreateTrigger> {
    return when {
      element is JsonObject && element.containsKey("cron") -> ScheduleTriggerInput.serializer()
      element is JsonObject -> OnDemandTriggerInput.serializer()
      element is JsonObject -> SubscriptionTrigger.serializer()
      element is JsonObject -> StreamingTrigger.serializer()
      else -> throw AlgoliaClientException("Failed to deserialize json element: $element")
    }
  }
}
