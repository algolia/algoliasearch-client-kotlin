/** Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT. */
package com.algolia.client.model.composition

import com.algolia.client.exception.AlgoliaClientException
import com.algolia.client.extensions.internal.*
import kotlinx.serialization.*
import kotlinx.serialization.builtins.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.*
import kotlin.jvm.JvmInline

/**
 * BatchCompositionAction
 *
 * Implementations:
 * - [Composition]
 * - [DeleteCompositionAction]
 */
@Serializable(BatchCompositionActionSerializer::class)
public sealed interface BatchCompositionAction {
  @Serializable
  @JvmInline
  public value class CompositionValue(public val value: Composition) : BatchCompositionAction

  @Serializable
  @JvmInline
  public value class DeleteCompositionActionValue(public val value: DeleteCompositionAction) : BatchCompositionAction

  public companion object {

    public fun of(value: Composition): BatchCompositionAction = CompositionValue(value)

    public fun of(value: DeleteCompositionAction): BatchCompositionAction = DeleteCompositionActionValue(value)
  }
}

internal class BatchCompositionActionSerializer : JsonContentPolymorphicSerializer<BatchCompositionAction>(BatchCompositionAction::class) {
  override fun selectDeserializer(element: JsonElement): DeserializationStrategy<BatchCompositionAction> = when {
    element is JsonObject -> Composition.serializer()
    element is JsonObject -> DeleteCompositionAction.serializer()
    else -> throw AlgoliaClientException("Failed to deserialize json element: $element")
  }
}
