/**
 * Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be
 * lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
 */
package com.algolia.client.model.insights

import kotlinx.serialization.*
import kotlinx.serialization.json.*

/**
 * Use this event to track when users click facet filters in your user interface.
 *
 * @param eventName Event name, up to 64 ASCII characters. Consider naming events consistently—for
 *   example, by adopting Segment's
 *   [object-action](https://segment.com/academy/collecting-data/naming-conventions-for-clean-data/#the-object-action-framework)
 *   framework.
 * @param eventType
 * @param index Index name (case-sensitive) to which the event's items belong.
 * @param filters Applied facet filters. Facet filters are `facet:value` pairs. Facet values must be
 *   URL-encoded, such as, `discount:10%25`.
 * @param userToken Anonymous or pseudonymous user identifier. Don't use personally identifiable
 *   information in user tokens. For more information, see
 *   [User token](https://www.algolia.com/doc/guides/sending-events/concepts/usertoken).
 * @param authenticatedUserToken Identifier for authenticated users. When the user signs in, you can
 *   get an identifier from your system and send it as `authenticatedUserToken`. This lets you keep
 *   using the `userToken` from before the user signed in, while providing a reliable way to
 *   identify users across sessions. Don't use personally identifiable information in user tokens.
 *   For more information, see
 *   [User token](https://www.algolia.com/doc/guides/sending-events/concepts/usertoken).
 * @param timestamp Timestamp of the event, measured in milliseconds since the Unix epoch. By
 *   default, the Insights API uses the time it receives an event as its timestamp.
 */
@Serializable
public data class ClickedFilters(

  /**
   * Event name, up to 64 ASCII characters. Consider naming events consistently—for example, by
   * adopting Segment's
   * [object-action](https://segment.com/academy/collecting-data/naming-conventions-for-clean-data/#the-object-action-framework)
   * framework.
   */
  @SerialName(value = "eventName") val eventName: String,
  @SerialName(value = "eventType") val eventType: ClickEvent,

  /** Index name (case-sensitive) to which the event's items belong. */
  @SerialName(value = "index") val index: String,

  /**
   * Applied facet filters. Facet filters are `facet:value` pairs. Facet values must be URL-encoded,
   * such as, `discount:10%25`.
   */
  @SerialName(value = "filters") val filters: List<String>,

  /**
   * Anonymous or pseudonymous user identifier. Don't use personally identifiable information in
   * user tokens. For more information, see
   * [User token](https://www.algolia.com/doc/guides/sending-events/concepts/usertoken).
   */
  @SerialName(value = "userToken") val userToken: String,

  /**
   * Identifier for authenticated users. When the user signs in, you can get an identifier from your
   * system and send it as `authenticatedUserToken`. This lets you keep using the `userToken` from
   * before the user signed in, while providing a reliable way to identify users across sessions.
   * Don't use personally identifiable information in user tokens. For more information, see
   * [User token](https://www.algolia.com/doc/guides/sending-events/concepts/usertoken).
   */
  @SerialName(value = "authenticatedUserToken") val authenticatedUserToken: String? = null,

  /**
   * Timestamp of the event, measured in milliseconds since the Unix epoch. By default, the Insights
   * API uses the time it receives an event as its timestamp.
   */
  @SerialName(value = "timestamp") val timestamp: Long? = null,
) : EventsItems {}
